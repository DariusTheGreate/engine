 0# boost::stacktrace::basic_stacktrace<std::allocator<boost::stacktrace::frame> >::init at E:\own\c++\libs\boost_1_82_0\boost\boost\stacktrace\stacktrace.hpp:77
 1# boost::stacktrace::basic_stacktrace<std::allocator<boost::stacktrace::frame> >::basic_stacktrace<std::allocator<boost::stacktrace::frame> > at E:\own\c++\libs\boost_1_82_0\boost\boost\stacktrace\stacktrace.hpp:130
 2# StackTrace::setSignalHandlers at E:\own\programming\engine\src\StackTrace.cpp:26
 3# raise in ucrtbased
 4# setmbcp in ucrtbased
 5# CrtSetReportHookW2 in ucrtbased
 6# VCrtDbgReportA in ucrtbased
 7# CrtDbgReport in ucrtbased
 8# std::optional<SpriteAnimation>::operator-> at C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\optional:376
 9# Object::serialize at E:\own\programming\engine\src\Object.cpp:577
10# `ClientConnection::sync'::`7'::<lambda_2>::operator() at E:\own\programming\engine\src\Server.cpp:118
11# boostSaveUse<`ClientConnection::sync'::`7'::<lambda_2> > at E:\own\programming\engine\src\Server.h:19
12# ClientConnection::sync at E:\own\programming\engine\src\Server.cpp:104
13# `Server::listen'::`4'::<lambda_1>::operator() at E:\own\programming\engine\src\Server.cpp:147
14# `ThreadPool::SubmitVoid<`Server::listen'::`4'::<lambda_1> >'::`2'::<lambda_1>::operator() at E:\own\programming\engine\src\ThreadPool.h:29
15# std::invoke<`ThreadPool::SubmitVoid<`Server::listen'::`4'::<lambda_1> >'::`2'::<lambda_1> &> at C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits:1565
16# std::_Invoker_ret<void>::_Call<`ThreadPool::SubmitVoid<`Server::listen'::`4'::<lambda_1> >'::`2'::<lambda_1> &> at C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\functional:674
17# std::_Func_impl_no_alloc<`ThreadPool::SubmitVoid<`Server::listen'::`4'::<lambda_1> >'::`2'::<lambda_1>,void>::_Do_call at C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\functional:834
18# std::_Func_class<void>::operator() at C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\functional:875
19# ThreadPool::get_task at E:\own\programming\engine\src\ThreadPool.h:72
20# `ThreadPool::initialize_workers'::`4'::<lambda_1>::operator() at E:\own\programming\engine\src\ThreadPool.h:60
21# std::invoke<`ThreadPool::initialize_workers'::`4'::<lambda_1> > at C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits:1565
22# std::thread::_Invoke<std::tuple<`ThreadPool::initialize_workers'::`4'::<lambda_1> >,0> at C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\thread:56
23# register_onexit_function in ucrtbased
24# BaseThreadInitThunk in KERNEL32
25# RtlUserThreadStart in ntdll
